{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pasha\\\\WebstormProjects\\\\weathertop\\\\src\\\\Modal2.js\";\nimport React from 'react';\nimport './Modal2.css';\nimport './App.css';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Modal2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false,\n      sunset: null,\n      sunrise: null,\n      showSunSet: false,\n      showSunRise: false,\n      coordinatesTopSunSet: null,\n      coordinatesTopSunRise: null,\n      coordinatesRightSunSet: null,\n      coordinatesLeftSunRise: null,\n      arrCoordinatesTopSunRise: [135, 130, 120, 110, 90, 70, 50, 40, 30, 20, 10, 0, -6],\n      arrCoordinatesLeftSunRise: [-5, -3, -3, -1, 4, 14, 8, 28, 36, 45, 60, 75, 100, 145],\n      arrCoordinatesTopSunSet: [-17, -5, 0, 10, 30, 40, 60, 70, 80, 90, 100, 110, 130],\n      arrCoordinatesRightSunSet: [-150, -200, -215, -230, -255, -262, -275, -280, -285, -287, -290, -293, -295]\n    };\n\n    this.coordinatesSunRise = () => {\n      let time = this.state.sunrise.slice(0, 2);\n\n      if (time !== '10' && time !== '11' && time !== '12') {\n        time = time.slice(1);\n      }\n\n      ;\n      this.state.arrCoordinatesLeftSunRise.forEach((coordinatesLeftSunRise, index) => {\n        if (`${index}` === time) {\n          this.setState({\n            coordinatesLeftSunRise\n          });\n        }\n      });\n      this.state.arrCoordinatesTopSunRise.forEach((coordinatesTopSunRise, index) => {\n        if (`${index}` === time) {\n          this.setState({\n            coordinatesTopSunRise\n          });\n        }\n      });\n    };\n\n    this.coordinatesSunSet = () => {\n      this.state.arrCoordinatesTopSunSet.forEach((coordinatesTopSunSet, index) => {\n        if (`${index + 12}` === this.state.sunset.slice(0, 2)) {\n          this.setState({\n            coordinatesTopSunSet\n          });\n        }\n      });\n      this.state.arrCoordinatesRightSunSet.forEach((coordinatesRightSunSet, index) => {\n        if (`${index + 12}` === this.state.sunset.slice(0, 2)) {\n          this.setState({\n            coordinatesRightSunSet\n          });\n        }\n      });\n    };\n\n    this.handleLocationClick = e => {\n      this.setState({\n        isOpen: false\n      });\n      this.props.onLocationClick(e);\n    };\n\n    this.getTimeWithDate = () => {\n      this.setState({\n        sunrise: moment(new Date(this.props.city.sys.sunrise * 1000)).zone(-this.props.city.timezone / 3600).format('HH:mm'),\n        sunset: moment(new Date(this.props.city.sys.sunset * 1000)).zone(-this.props.city.timezone / 3600).format('HH:mm')\n      }, () => {\n        this.coordinatesSunSet();\n        this.coordinatesSunRise();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getTimeWithDate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.setState({\n          isOpen: true\n        }),\n        children: \"\\u0420\\u0430\\u0441\\u0441\\u0432\\u0435\\u0442 \\u0438 \\u0437\\u0430\\u043A\\u0430\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), this.state.isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body__header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"modal-body__title\",\n              children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u0440\\u0430\\u0441\\u0432\\u0435\\u0442\\u0435 \\u0438 \\u0437\\u0430\\u043A\\u0430\\u0442\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.setState({\n                isOpen: false\n              }),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cont\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body__dot\",\n              style: {\n                top: this.state.coordinatesTopSunRise,\n                left: this.state.coordinatesLeftSunRise\n              },\n              onMouseOver: () => this.setState({\n                showSunRise: true\n              }),\n              onMouseOut: () => this.setState({\n                showSunRise: false\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: 'modal-body__img-sun',\n                src: '../sun.jpg',\n                alt: 'Солнце'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), this.state.showSunRise && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'modal-body__dot-hover',\n                onMouseOut: () => this.setState({\n                  showSunRise: false\n                }),\n                onMouseOver: () => this.setState({\n                  showSunRise: true\n                }),\n                children: [\"\\u0412\\u043E\\u0441\\u0445\\u043E\\u0434 - \", this.state.sunrise]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                top: this.state.coordinatesTopSunSet,\n                right: this.state.coordinatesRightSunSet\n              },\n              className: 'modal-body__dot',\n              onMouseOver: () => this.setState({\n                showSunSet: true\n              }),\n              onMouseOut: () => this.setState({\n                showSunSet: false\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: 'modal-body__img-moon',\n                src: '../moon.png',\n                alt: 'Луна'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), this.state.showSunSet && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'modal-body__dot-hover',\n                onMouseOut: () => this.setState({\n                  showSunSet: false\n                }),\n                onMouseOver: () => this.setState({\n                  showSunSet: true\n                }),\n                children: [\"\\u0417\\u0430\\u043A\\u0430\\u0442 - \", this.state.sunset]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/pasha/WebstormProjects/weathertop/src/Modal2.js"],"names":["React","moment","Modal2","Component","state","isOpen","sunset","sunrise","showSunSet","showSunRise","coordinatesTopSunSet","coordinatesTopSunRise","coordinatesRightSunSet","coordinatesLeftSunRise","arrCoordinatesTopSunRise","arrCoordinatesLeftSunRise","arrCoordinatesTopSunSet","arrCoordinatesRightSunSet","coordinatesSunRise","time","slice","forEach","index","setState","coordinatesSunSet","handleLocationClick","e","props","onLocationClick","getTimeWithDate","Date","city","sys","zone","timezone","format","componentDidMount","render","top","left","right"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './Modal2.css'\r\nimport './App.css';\r\nimport moment from 'moment';\r\n\r\n\r\nexport default class Modal2 extends React.Component {\r\n    state = {\r\n        isOpen: false,\r\n        sunset: null,\r\n        sunrise: null,\r\n        showSunSet: false,\r\n        showSunRise: false,\r\n        coordinatesTopSunSet: null,\r\n        coordinatesTopSunRise: null,\r\n        coordinatesRightSunSet: null,\r\n        coordinatesLeftSunRise: null,\r\n        arrCoordinatesTopSunRise: [135, 130, 120, 110, 90, 70, 50, 40, 30, 20, 10, 0, -6],\r\n        arrCoordinatesLeftSunRise: [-5, -3, -3, -1, 4, 14, 8, 28, 36, 45, 60, 75, 100, 145],\r\n        arrCoordinatesTopSunSet: [-17, -5, 0, 10, 30, 40, 60, 70, 80, 90, 100, 110, 130],\r\n        arrCoordinatesRightSunSet: [-150, -200, -215, -230, -255, -262, -275, -280, -285, -287, -290, -293, -295],\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getTimeWithDate();\r\n    };\r\n\r\n\r\n    /**\r\n     * Координаты для восхода\r\n     */\r\n     coordinatesSunRise = () => {\r\n        let time = this.state.sunrise.slice(0, 2);\r\n        if (time !== '10' && time !== '11' && time !== '12') {\r\n            time = time.slice(1);\r\n        };\r\n        this.state.arrCoordinatesLeftSunRise.forEach((coordinatesLeftSunRise, index) => {\r\n            if (`${index}` === time) {\r\n                this.setState({ coordinatesLeftSunRise });\r\n            }\r\n        });\r\n        this.state.arrCoordinatesTopSunRise.forEach((coordinatesTopSunRise, index) => {\r\n            if (`${index}` === time) {\r\n                this.setState({ coordinatesTopSunRise });\r\n            }\r\n        })\r\n    };\r\n\r\n    /**\r\n     * Координаты для заката\r\n     */\r\n    coordinatesSunSet = () => {\r\n        this.state.arrCoordinatesTopSunSet.forEach((coordinatesTopSunSet, index) => {\r\n            if (`${index + 12}` === this.state.sunset.slice(0, 2)) {\r\n                this.setState({ coordinatesTopSunSet });\r\n            }\r\n        });\r\n\r\n        this.state.arrCoordinatesRightSunSet.forEach((coordinatesRightSunSet, index) => {\r\n            if (`${index + 12}` === this.state.sunset.slice(0, 2)) {\r\n                this.setState({ coordinatesRightSunSet });\r\n            }\r\n        })\r\n    };\r\n\r\n    handleLocationClick = (e) => {\r\n        this.setState({ isOpen: false });\r\n        this.props.onLocationClick(e);\r\n    }\r\n\r\n    getTimeWithDate = () => {\r\n        this.setState(\r\n            {\r\n                sunrise: moment(new Date(this.props.city.sys.sunrise * 1000)).zone(-this.props.city.timezone / 3600).format('HH:mm'),\r\n                sunset: moment(new Date(this.props.city.sys.sunset * 1000)).zone(-this.props.city.timezone / 3600).format('HH:mm'),\r\n            },\r\n            () => {\r\n                this.coordinatesSunSet();\r\n                this.coordinatesSunRise();\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <button\r\n                    onClick={() => this.setState({ isOpen: true })}\r\n                >\r\n                    Рассвет и закат\r\n                </button>\r\n                {\r\n                    this.state.isOpen && (\r\n                    <div\r\n                        className='modal'\r\n                    >\r\n                        <div\r\n                            className='modal-body'\r\n                        >\r\n                            <div\r\n                                className='modal-body__header'\r\n                            >\r\n                                <h1\r\n                                    className='modal-body__title'\r\n                                >\r\n                                   Информация о расвете и закате\r\n                                </h1>\r\n                                <button\r\n                                    onClick={() => this.setState({ isOpen: false })}\r\n                                >\r\n                                    X\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"cont\">\r\n                                <div\r\n                                    className=\"modal-body__dot\"\r\n                                    style={{\r\n                                        top: this.state.coordinatesTopSunRise,\r\n                                        left: this.state.coordinatesLeftSunRise,\r\n                                    }}\r\n                                    onMouseOver={() => this.setState({ showSunRise: true })}\r\n                                    onMouseOut={() => this.setState({ showSunRise: false })}\r\n                                >\r\n                                <img\r\n                                    className={'modal-body__img-sun'}\r\n                                    src={'../sun.jpg'}\r\n                                    alt={'Солнце'}\r\n                                />\r\n                                    {\r\n                                        this.state.showSunRise &&\r\n                                        <div\r\n                                            className={'modal-body__dot-hover'}\r\n                                            onMouseOut={() => this.setState({ showSunRise: false })}\r\n                                            onMouseOver={() => this.setState({ showSunRise: true })}\r\n                                        >\r\n                                            Восход - {this.state.sunrise}\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        top: this.state.coordinatesTopSunSet,\r\n                                        right: this.state.coordinatesRightSunSet,\r\n                                    }}\r\n                                    className={'modal-body__dot'}\r\n                                    onMouseOver={() => this.setState({ showSunSet: true })}\r\n                                    onMouseOut={() => this.setState({ showSunSet: false })}\r\n                                >\r\n                                <img\r\n                                    className={'modal-body__img-moon'}\r\n                                    src={'../moon.png'}\r\n                                    alt={'Луна'}\r\n                                />\r\n                                    {\r\n                                        this.state.showSunSet &&\r\n                                        <div\r\n                                            className={'modal-body__dot-hover'}\r\n                                            onMouseOut={() => this.setState({ showSunSet: false })}\r\n                                            onMouseOver={() => this.setState({ showSunSet: true })}\r\n                                        >\r\n                                            Закат - {this.state.sunset}\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}